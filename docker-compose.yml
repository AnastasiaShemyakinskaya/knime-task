version: "3.8"

services:
  postgres:
    image: postgres:16
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - app
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "--quiet"]
      interval: 10s
      timeout: 10s
      retries: 5

  nats:
    image: nats:2.10.9
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222
    networks:
      - app
    healthcheck:
      test: ["CMD", "nats-server", "-sl"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    image: migrate/migrate
    command: -database postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable -path /migration up
    volumes:
      - ./simple-app/migration:/migration
    working_dir: /migration
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app

  app:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      replicas: 3
    environment:
      DB_URL: postgresql://postgres:postgres@postgres:5432/postgres
      NATS_URL: nats://nats:4222
    depends_on:
      migrations:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - app
    expose:
      - "8080"

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - app

volumes:
  db:
    driver: local

networks:
  app:
    driver: bridge
